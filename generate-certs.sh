# GENERATED BY CLAUDE CODE, VALIDATED BY RYAN
# for mTLS

#!/bin/bash

# Script to generate additional client certificates
# Usage: ./generate-client-cert.sh <client-name>

set -e

if [ -z "$1" ]; then
    echo "Usage: ./generate-client-cert.sh <client-name>"
    echo "Example: ./generate-client-cert.sh alice"
    exit 1
fi

CLIENT_NAME=$1
CERT_DIR="certs"
PASSWORD="serverpass"

cd $CERT_DIR

echo "Generating certificate for client: $CLIENT_NAME"

# Generate client private key
openssl genrsa -out ${CLIENT_NAME}-key.pem 4096
echo "✓ Private key created"

# Generate CSR
openssl req -new -key ${CLIENT_NAME}-key.pem -out ${CLIENT_NAME}.csr \
    -subj "/C=US/ST=State/L=City/O=GroupH/OU=Client/CN=$CLIENT_NAME"
echo "✓ CSR created"

# Sign with CA
openssl x509 -req -days 730 -in ${CLIENT_NAME}.csr -CA ca-cert.pem \
    -CAkey ca-key.pem -CAcreateserial -out ${CLIENT_NAME}-cert.pem
echo "✓ Certificate signed"

# Create keystore
openssl pkcs12 -export -in ${CLIENT_NAME}-cert.pem -inkey ${CLIENT_NAME}-key.pem \
    -out ${CLIENT_NAME}-keystore.p12 -name ${CLIENT_NAME} -password pass:$PASSWORD

keytool -importkeystore -srckeystore ${CLIENT_NAME}-keystore.p12 -srcstoretype PKCS12 \
    -destkeystore ${CLIENT_NAME}-keystore.jks -deststoretype JKS \
    -srcstorepass $PASSWORD -deststorepass $PASSWORD -noprompt
echo "✓ Keystore created: ${CLIENT_NAME}-keystore.jks"

# Copy the truststore (same for all clients)
cp client-truststore.jks ${CLIENT_NAME}-truststore.jks
echo "✓ Truststore copied: ${CLIENT_NAME}-truststore.jks"

echo ""
echo "Client certificate created! Files:"
echo "  - ${CLIENT_NAME}-keystore.jks"
echo "  - ${CLIENT_NAME}-truststore.jks"
echo ""
echo "Distribute these files to the client '$CLIENT_NAME'"
